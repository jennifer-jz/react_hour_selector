{"map":"{\"version\":3,\"sources\":[\"E:\\\\web\\\\node\\\\react_hour_selector\\\\src\\\\components\\\\react-calendar\\\\react-calendar.js\",\"E:\\\\web\\\\node\\\\react_hour_selector\\\\src\\\\components\\\\hour-selector\\\\hour-selector.js\",\"E:\\\\web\\\\node\\\\react_hour_selector\\\\src\\\\App.js\",\"E:\\\\web\\\\node\\\\react_hour_selector\\\\src\\\\serviceWorker.js\",\"E:\\\\web\\\\node\\\\react_hour_selector\\\\src\\\\index.js\"],\"names\":[\"ReactCalendar\",\"state\",\"date\",\"Date\",\"onChange\",\"_this\",\"setState\",\"onClickDay\",\"props\",\"selectCalendar\",\"this\",\"react_default\",\"a\",\"createElement\",\"className\",\"concat\",\"entry_default\",\"value\",\"Component\",\"HourSelector\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"toDateString\",\"toLocaleDateString\",\"showCalendar\",\"hideCalendar\",\"e\",\"target\",\"tagName\",\"mycalendar\",\"ReactDOM\",\"findDOMNode\",\"calendar\",\"contains\",\"hourDiff\",\"currentHour\",\"initialHour\",\"offset\",\"rulerUnitLength\",\"dateStr\",\"leftOffset\",\"refDate\",\"setDate\",\"getDate\",\"console\",\"log\",\"onMouseDown\",\"mouseX\",\"pageX\",\"onMouseMove\",\"moving\",\"numUnit\",\"Math\",\"round\",\"currentDate\",\"onMouseUp\",\"onClick\",\"window\",\"innerWidth\",\"onMouseLeave\",\"showHours\",\"rulerLength\",\"widthLevel\",\"leftInitial\",\"initialDate\",\"defaultDate\",\"cells\",\"totalHours\",\"i\",\"push\",\"String\",\"prototype\",\"padStart\",\"readOnly\",\"map\",\"cell\",\"index\",\"key\",\"_this2\",\"currentWidth\",\"style\",\"width\",\"type\",\"onFocus\",\"index_es\",\"icon\",\"react_calendar_react_calendar\",\"ref\",\"self\",\"left\",\"renderRuler\",\"pointer\",\"library\",\"add\",\"faCalendarAlt\",\"App\",\"hour_selector_hour_selector\",\"Boolean\",\"location\",\"hostname\",\"match\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport Calendar from 'react-calendar';\\nimport './react-calendar.css';\\n\\nclass ReactCalendar extends Component {\\n\\n  //  props.date: Date   // default date selected\\n  //  props.selectCalendar(date: Date): void    // callback when a date is selected\\n\\n  state = {\\n    date: new Date()    // current date selected\\n  };\\n\\n  onChange = (date) => {\\n    this.setState({\\n      date: date\\n    });\\n  }\\n\\n  onClickDay = (date) => {\\n    this.props.selectCalendar && this.props.selectCalendar(date);\\n  }\\n\\n  componentWillMount() {\\n    this.setState({\\n      date: this.props.date\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div className={`calendar ${this.props.className || ''}`}>\\n        <Calendar onChange={this.onChange} value={this.state.date} onClickDay={this.onClickDay}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default ReactCalendar;\\n\",\"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport ReactCalendar from '../react-calendar/react-calendar';\\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\\nimport './hour-selector.css';\\n\\nclass HourSelector extends Component {\\n    constructor(props){\\n        // props.widthLevel: Number    // number of hours available in the scaler window on each side of the pointer, 3+\\n        // props.defaultDate: Date    // default date selected\\n        super(props);\\n\\n        // calendar dom element to be referenced\\n        this.calendar = null;\\n\\n        // X position when starting to drag\\n        this.mouseX = null;\\n\\n        this.moving = false;\\n        \\n        // length of an hour in the scale, including border width of each cell\\n        this.rulerUnitLength = 44;\\n\\n        // total number of hours shown on the scale, corresponding to 90 days\\n        this.showHours = 30 * 3 * 24;\\n        \\n        // total length of the scale, including additional 2px for borders on both ends\\n        this.rulerLength = this.rulerUnitLength * this.showHours + 2;\\n        \\n        // the hour value that is pointed initially when selecting a date, that is a middle point of all hours\\n        this.initialHour = this.showHours / 2;\\n        \\n        // width level of the scaler window, number of hours available on each side\\n        this.widthLevel = (props.widthLevel) || 6;\\n        if (props.widthLevel < 3) {\\n            this.widthLevel = 3;\\n        }\\n\\n        // the position offset of the div block of the scale relative to the left border of the yellow scale container, 10px for initial offset caused by border and padding\\n        this.leftInitial = -this.rulerUnitLength * (this.initialHour - this.widthLevel) -10;\\n        \\n        // current hours elapsed relative to the leftmost hour\\n        this.currentHour = this.initialHour;\\n\\n        this.initialDate = props.defaultDate || new Date();\\n        \\n        // reference date corresponding to the leftmost hour, used to calculate the current date as we drag along the scale\\n        this.refDate = new Date(this.initialDate);\\n        this.refDate.setDate(this.refDate.getDate() - 45);\\n\\n        this.state = {\\n            date: this.initialDate, // current date selected\\n            dateStr: this.initialDate.toLocaleDateString(\\\"en-US\\\"), // formatted date string shown in text field\\n            showCalendar: false, // whether calendar select is shown\\n            leftOffset: 0, // offset of the scale as it is dragged horizontally\\n        }\\n    }\\n\\n    toDateString = (date) => {\\n        return date.toLocaleDateString(\\\"en-US\\\");\\n    }\\n\\n    showCalendar = () => {\\n        this.setState({\\n            showCalendar: true\\n        });\\n    }\\n\\n    hideCalendar = (e) => {\\n        // when clicking on the date text field, calendar is not hidden\\n        if (e.target.tagName === \\\"INPUT\\\" || e.target.className === \\\"date-text\\\") {\\n            return;\\n        }\\n        // when clicking on the calendar avatar, calendar is not hidden\\n        if (e.target.tagName === 'path' || e.target.tagName === \\\"svg\\\" || e.className === \\\"date-picker-svg\\\") {\\n            return;\\n        }\\n        // when clicking on any element of a showing calendar, calendar is not hidden\\n        const mycalendar = ReactDOM.findDOMNode(this.calendar);\\n        if (mycalendar && mycalendar.contains(e.target)) {\\n            return;\\n        }\\n\\n        this.setState({\\n            showCalendar: false\\n        });\\n    }\\n\\n    // when a date is selected from the calendar, calendar is hidden and the position of scale is reset to initial\\n    selectCalendar = (date) => {\\n        const hourDiff = this.currentHour % 24;\\n        this.currentHour = this.initialHour + hourDiff;\\n        const offset = - hourDiff * this.rulerUnitLength;\\n\\n        this.setState({\\n            date: date,\\n            dateStr: date.toLocaleDateString(\\\"en-US\\\"),\\n            showCalendar: false,\\n            leftOffset: offset\\n        });\\n        this.refDate = new Date(date);\\n        this.refDate.setDate(date.getDate() - 45);\\n\\n        console.log(`Selected Hour ${(this.currentHour + 12) % 24}:00`, 'on', this.toDateString(date));\\n\\n    }\\n\\n    // record the position mouseX when starting dragging\\n    onMouseDown = (e) => {\\n        this.mouseX = e.pageX - this.state.leftOffset;\\n    }\\n\\n    // calculate in real time the length of distance from mouseX when we dragging\\n    // then calculate the current date and position offset of the scale\\n    onMouseMove = (e) => {\\n        if (!this.mouseX) return;\\n        this.moving = true;\\n\\n        let offset = e.pageX - this.mouseX;\\n        let numUnit = Math.round(offset / this.rulerUnitLength);\\n        this.currentHour = this.initialHour - numUnit;\\n\\n        const currentDate = new Date(this.refDate);\\n        currentDate.setDate(this.refDate.getDate() + Math.round(this.currentHour / 24));\\n        this.setState({\\n            leftOffset: offset,\\n            date: currentDate,\\n            dateStr: currentDate.toLocaleDateString(\\\"en-US\\\")\\n        });\\n\\n        console.log(`Selected Hour ${(this.currentHour + 12) % 24}:00`, 'on', this.toDateString(currentDate));\\n    }\\n\\n    onMouseUp = (e) => {\\n        const offset = e.pageX - this.mouseX;\\n        let numUnit = Math.round(offset / this.rulerUnitLength);\\n        this.currentHour = this.initialHour - numUnit;\\n\\n        const currentDate = new Date(this.refDate);\\n        currentDate.setDate(this.refDate.getDate() + Math.round(this.currentHour / 24));\\n\\n        // set the offset position to that corresponding to an hour\\n        this.setState({\\n            leftOffset: numUnit * this.rulerUnitLength,\\n            date: currentDate,\\n            dateStr: currentDate.toLocaleDateString(\\\"en-US\\\")\\n        });\\n\\n        this.mouseX = null;\\n    }\\n\\n    onClick = (e) => {\\n        if (this.moving) { \\n            this.moving = false;\\n            return; \\n        }\\n\\n        const offset = e.pageX - window.innerWidth / 2;\\n        let numUnit = -Math.round(offset / this.rulerUnitLength);\\n        this.currentHour = this.currentHour - numUnit;\\n\\n        const currentDate = new Date(this.refDate);\\n        currentDate.setDate(this.refDate.getDate() + Math.round(this.currentHour / 24));\\n\\n        // set the offset position to that corresponding to an hour\\n        this.setState({\\n            leftOffset: this.state.leftOffset + numUnit * this.rulerUnitLength,\\n            date: currentDate,\\n            dateStr: currentDate.toLocaleDateString(\\\"en-US\\\")\\n        });\\n\\n        console.log(`Selected Hour ${(this.currentHour + 12) % 24}:00`, 'on', this.toDateString(currentDate));\\n\\n        this.mouseX = null;\\n    }\\n\\n    // when mouse leaving, set mouseX to null to keep the scale static\\n    onMouseLeave = () => {\\n        this.mouseX = null;\\n    }\\n\\n    renderRuler(date) {\\n        const cells = [];\\n        const totalHours = this.showHours + 12;\\n        \\n        // the middle of all hours corresponds to 12\\n        for(let i = 12; i < totalHours; i++) {\\n            cells.push(`${String.prototype.padStart.call(i % 24, 2, '0')}`);\\n        }\\n\\n        return (\\n            <table readOnly>\\n                <tbody>\\n                    <tr>\\n                        {cells.map((cell, index) => {\\n                            return (<td key={index} className=\\\"ruler-cell-up\\\">{cell}</td>)\\n                        })}\\n                    </tr>\\n                    <tr>\\n                        {cells.map((cell, index) => {\\n                            return (<td key={index} className=\\\"ruler-cell-down\\\"></td>)\\n                        })}\\n                    </tr>\\n                </tbody>\\n            </table>\\n        );\\n    }\\n\\n    render() {\\n        const currentWidth = `${(this.widthLevel - 6) * 88 + 550}px`;\\n\\n        return (\\n            <div className=\\\"hour-selector\\\" onClick={this.hideCalendar} style={{width: currentWidth}}>\\n                <div className=\\\"date-picker\\\">\\n                    <div className=\\\"date-text\\\"><input type=\\\"text\\\" value={this.state.dateStr} onFocus={this.showCalendar} readOnly /></div>\\n                    <div className=\\\"date-picker-svg\\\" onClick={this.showCalendar}><FontAwesomeIcon icon=\\\"calendar-alt\\\" /></div>\\n                    {this.state.showCalendar && \\n                        <ReactCalendar \\n                            ref={(self)=>{\\n                                this.calendar = self;\\n                            }} \\n                            date={this.state.date} \\n                            className=\\\"my-calendar\\\" \\n                            selectCalendar={this.selectCalendar} \\n                        />\\n                    }\\n                </div>\\n                <div className=\\\"hour-container-hidden\\\">\\n                    <div \\n                        className=\\\"hour-mask\\\"\\n                        // onMouseMove={this.onMouseMove} \\n                        // onMouseDown={this.onMouseDown}\\n                        // onMouseUp={this.onMouseUp} \\n                        onMouseLeave={this.onMouseLeave}\\n                        onClick={this.onClick}\\n                    ></div>\\n                    <div \\n                        className=\\\"hour-container\\\" \\n                        style={{left: `calc(${this.leftInitial}px + ${this.state.leftOffset}px)`}} \\n                    >\\n                        {this.renderRuler(this.state.date)}\\n                    </div>\\n                    <div \\n                        className=\\\"hour-picker\\\" \\n                        ref={(self)=>{\\n                            this.pointer = self;\\n                        }} \\n                    ></div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default HourSelector;\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport HourSelector from './components/hour-selector/hour-selector';\\nimport { library } from '@fortawesome/fontawesome-svg-core';\\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\\n\\nlibrary.add(faCalendarAlt);\\n\\nclass App extends Component {\\n  render() {\\n    let date = new Date();\\n    date.setDate(date.getDate() - 4);\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          \\n        </header>\\n        <HourSelector widthLevel={6}/>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{26:function(e,t,a){e.exports=a(59)},31:function(e,t,a){},33:function(e,t,a){},55:function(e,t,a){},57:function(e,t,a){},59:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),o=a(13),l=a.n(o),i=(a(31),a(4)),c=a(5),s=a(7),u=a(6),d=a(8),h=(a(33),a(23)),f=a.n(h),m=(a(55),function(e){function t(){var e,a;Object(i.a)(this,t);for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(a=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).state={date:new Date},a.onChange=function(e){a.setState({date:e})},a.onClickDay=function(e){a.props.selectCalendar&&a.props.selectCalendar(e)},a}return Object(d.a)(t,e),Object(c.a)(t,[{key:\"componentWillMount\",value:function(){this.setState({date:this.props.date})}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"calendar \".concat(this.props.className||\"\")},r.a.createElement(f.a,{onChange:this.onChange,value:this.state.date,onClickDay:this.onClickDay}))}}]),t}(n.Component)),g=a(24),v=(a(57),function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(s.a)(this,Object(u.a)(t).call(this,e))).toDateString=function(e){return e.toLocaleDateString(\"en-US\")},a.showCalendar=function(){a.setState({showCalendar:!0})},a.hideCalendar=function(e){if(\"INPUT\"!==e.target.tagName&&\"date-text\"!==e.target.className&&\"path\"!==e.target.tagName&&\"svg\"!==e.target.tagName&&\"date-picker-svg\"!==e.className){var t=l.a.findDOMNode(a.calendar);t&&t.contains(e.target)||a.setState({showCalendar:!1})}},a.selectCalendar=function(e){var t=a.currentHour%24;a.currentHour=a.initialHour+t;var n=-t*a.rulerUnitLength;a.setState({date:e,dateStr:e.toLocaleDateString(\"en-US\"),showCalendar:!1,leftOffset:n}),a.refDate=new Date(e),a.refDate.setDate(e.getDate()-45),console.log(\"Selected Hour \".concat((a.currentHour+12)%24,\":00\"),\"on\",a.toDateString(e))},a.onMouseDown=function(e){a.mouseX=e.pageX-a.state.leftOffset},a.onMouseMove=function(e){if(a.mouseX){a.moving=!0;var t=e.pageX-a.mouseX,n=Math.round(t/a.rulerUnitLength);a.currentHour=a.initialHour-n;var r=new Date(a.refDate);r.setDate(a.refDate.getDate()+Math.round(a.currentHour/24)),a.setState({leftOffset:t,date:r,dateStr:r.toLocaleDateString(\"en-US\")}),console.log(\"Selected Hour \".concat((a.currentHour+12)%24,\":00\"),\"on\",a.toDateString(r))}},a.onMouseUp=function(e){var t=e.pageX-a.mouseX,n=Math.round(t/a.rulerUnitLength);a.currentHour=a.initialHour-n;var r=new Date(a.refDate);r.setDate(a.refDate.getDate()+Math.round(a.currentHour/24)),a.setState({leftOffset:n*a.rulerUnitLength,date:r,dateStr:r.toLocaleDateString(\"en-US\")}),a.mouseX=null},a.onClick=function(e){if(a.moving)a.moving=!1;else{var t=e.pageX-window.innerWidth/2,n=-Math.round(t/a.rulerUnitLength);a.currentHour=a.currentHour-n;var r=new Date(a.refDate);r.setDate(a.refDate.getDate()+Math.round(a.currentHour/24)),a.setState({leftOffset:a.state.leftOffset+n*a.rulerUnitLength,date:r,dateStr:r.toLocaleDateString(\"en-US\")}),console.log(\"Selected Hour \".concat((a.currentHour+12)%24,\":00\"),\"on\",a.toDateString(r)),a.mouseX=null}},a.onMouseLeave=function(){a.mouseX=null},a.calendar=null,a.mouseX=null,a.moving=!1,a.rulerUnitLength=44,a.showHours=2160,a.rulerLength=a.rulerUnitLength*a.showHours+2,a.initialHour=a.showHours/2,a.widthLevel=e.widthLevel||6,e.widthLevel<3&&(a.widthLevel=3),a.leftInitial=-a.rulerUnitLength*(a.initialHour-a.widthLevel)-10,a.currentHour=a.initialHour,a.initialDate=e.defaultDate||new Date,a.refDate=new Date(a.initialDate),a.refDate.setDate(a.refDate.getDate()-45),a.state={date:a.initialDate,dateStr:a.initialDate.toLocaleDateString(\"en-US\"),showCalendar:!1,leftOffset:0},a}return Object(d.a)(t,e),Object(c.a)(t,[{key:\"renderRuler\",value:function(e){for(var t=[],a=this.showHours+12,n=12;n<a;n++)t.push(\"\".concat(String.prototype.padStart.call(n%24,2,\"0\")));return r.a.createElement(\"table\",{readOnly:!0},r.a.createElement(\"tbody\",null,r.a.createElement(\"tr\",null,t.map(function(e,t){return r.a.createElement(\"td\",{key:t,className:\"ruler-cell-up\"},e)})),r.a.createElement(\"tr\",null,t.map(function(e,t){return r.a.createElement(\"td\",{key:t,className:\"ruler-cell-down\"})}))))}},{key:\"render\",value:function(){var e=this,t=\"\".concat(88*(this.widthLevel-6)+550,\"px\");return r.a.createElement(\"div\",{className:\"hour-selector\",onClick:this.hideCalendar,style:{width:t}},r.a.createElement(\"div\",{className:\"date-picker\"},r.a.createElement(\"div\",{className:\"date-text\"},r.a.createElement(\"input\",{type:\"text\",value:this.state.dateStr,onFocus:this.showCalendar,readOnly:!0})),r.a.createElement(\"div\",{className:\"date-picker-svg\",onClick:this.showCalendar},r.a.createElement(g.a,{icon:\"calendar-alt\"})),this.state.showCalendar&&r.a.createElement(m,{ref:function(t){e.calendar=t},date:this.state.date,className:\"my-calendar\",selectCalendar:this.selectCalendar})),r.a.createElement(\"div\",{className:\"hour-container-hidden\"},r.a.createElement(\"div\",{className:\"hour-mask\",onMouseLeave:this.onMouseLeave,onClick:this.onClick}),r.a.createElement(\"div\",{className:\"hour-container\",style:{left:\"calc(\".concat(this.leftInitial,\"px + \").concat(this.state.leftOffset,\"px)\")}},this.renderRuler(this.state.date)),r.a.createElement(\"div\",{className:\"hour-picker\",ref:function(t){e.pointer=t}})))}}]),t}(n.Component)),D=a(9),p=a(25);D.b.add(p.a);var w=function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=new Date;return e.setDate(e.getDate()-4),r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"}),r.a.createElement(v,{widthLevel:6}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[26,2,1]]]);","extractedComments":[]}