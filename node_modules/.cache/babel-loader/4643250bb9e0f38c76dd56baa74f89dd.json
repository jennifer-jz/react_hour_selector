{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\node\\\\react_hour_selector\\\\src\\\\components\\\\react-calendar\\\\react-calendar.js\";\nimport React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport './react-calendar.css';\n\nvar ReactCalendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReactCalendar, _Component);\n\n  function ReactCalendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReactCalendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReactCalendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      date: new Date() // current date selected\n\n    };\n\n    _this.onChange = function (date) {\n      _this.setState({\n        date: date\n      });\n    };\n\n    _this.onClickDay = function (date) {\n      _this.props.selectCalendar && _this.props.selectCalendar(date);\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactCalendar, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        date: this.props.date\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"calendar \".concat(this.props.className || ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Calendar, {\n        onChange: this.onChange,\n        value: this.state.date,\n        onClickDay: this.onClickDay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ReactCalendar;\n}(Component);\n\nexport default ReactCalendar;","map":{"version":3,"sources":["E:\\web\\node\\react_hour_selector\\src\\components\\react-calendar\\react-calendar.js"],"names":["React","Component","Calendar","ReactCalendar","state","date","Date","onChange","setState","onClickDay","props","selectCalendar","className"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,sBAAP;;IAEMC,a;;;;;;;;;;;;;;;;;UAKJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADA,CACc;;AADd,K;;UAIRC,Q,GAAW,UAACF,IAAD,EAAU;AACnB,YAAKG,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGD,K;;UAEDI,U,GAAa,UAACJ,IAAD,EAAU;AACrB,YAAKK,KAAL,CAAWC,cAAX,IAA6B,MAAKD,KAAL,CAAWC,cAAX,CAA0BN,IAA1B,CAA7B;AACD,K;;;;;;;yCAEoB;AACnB,WAAKG,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL;AADL,OAAd;AAGD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,qBAAc,KAAKK,KAAL,CAAWE,SAAX,IAAwB,EAAtC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKL,QAAzB;AAAmC,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,IAArD;AAA2D,QAAA,UAAU,EAAE,KAAKI,UAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMD;;;;EAhCyBR,S;;AAmC5B,eAAeE,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport './react-calendar.css';\n\nclass ReactCalendar extends Component {\n\n  //  props.date: Date   // default date selected\n  //  props.selectCalendar(date: Date): void    // callback when a date is selected\n\n  state = {\n    date: new Date()    // current date selected\n  };\n\n  onChange = (date) => {\n    this.setState({\n      date: date\n    });\n  }\n\n  onClickDay = (date) => {\n    this.props.selectCalendar && this.props.selectCalendar(date);\n  }\n\n  componentWillMount() {\n    this.setState({\n      date: this.props.date\n    });\n  }\n\n  render() {\n    return (\n      <div className={`calendar ${this.props.className || ''}`}>\n        <Calendar onChange={this.onChange} value={this.state.date} onClickDay={this.onClickDay}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ReactCalendar;\n"]},"metadata":{},"sourceType":"module"}