{"ast":null,"code":"import _classCallCheck from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\web\\\\node\\\\react_hour_selector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\web\\\\node\\\\react_hour_selector\\\\src\\\\components\\\\hour-selector\\\\hour-selector.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactCalendar from '../react-calendar/react-calendar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './hour-selector.css';\n\nvar HourSelector =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HourSelector, _Component);\n\n  function HourSelector(props) {\n    var _this;\n\n    _classCallCheck(this, HourSelector);\n\n    // props.widthLevel: Number    // number of hours available in the scaler window on each side of the pointer, 3+\n    // props.defaultDate: Date    // default date selected\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HourSelector).call(this, props)); // calendar dom element to be referenced\n\n    _this.toDateString = function (date) {\n      return date.toLocaleDateString(\"en-US\");\n    };\n\n    _this.showCalendar = function () {\n      _this.setState({\n        showCalendar: true\n      });\n    };\n\n    _this.hideCalendar = function (e) {\n      // when clicking on the date text field, calendar is not hidden\n      if (e.target.tagName === \"INPUT\" || e.target.className === \"date-text\") {\n        return;\n      } // when clicking on the calendar avatar, calendar is not hidden\n\n\n      if (e.target.tagName === 'path' || e.target.tagName === \"svg\" || e.className === \"date-picker-svg\") {\n        return;\n      } // when clicking on any element of a showing calendar, calendar is not hidden\n\n\n      var mycalendar = ReactDOM.findDOMNode(_this.calendar);\n\n      if (mycalendar && mycalendar.contains(e.target)) {\n        return;\n      }\n\n      _this.setState({\n        showCalendar: false\n      });\n    };\n\n    _this.selectCalendar = function (date) {\n      _this.setState({\n        date: date,\n        dateStr: date.toLocaleDateString(\"en-US\"),\n        showCalendar: false,\n        leftOffset: 0\n      });\n\n      _this.currentHour = _this.initialHour;\n      _this.refDate = new Date(date);\n\n      _this.refDate.setDate(date.getDate() - 45);\n    };\n\n    _this.onMouseDown = function (e) {\n      _this.mouseX = e.pageX - _this.state.leftOffset;\n    };\n\n    _this.onMouseMove = function (e) {\n      if (!_this.mouseX) return;\n      _this.moving = true;\n      var offset = e.pageX - _this.mouseX;\n      var numUnit = Math.round(offset / _this.rulerUnitLength);\n      _this.currentHour = _this.initialHour - numUnit;\n      var currentDate = new Date(_this.refDate);\n      currentDate.setDate(_this.refDate.getDate() + Math.round(_this.currentHour / 24));\n\n      _this.setState({\n        leftOffset: offset,\n        date: currentDate,\n        dateStr: currentDate.toLocaleDateString(\"en-US\")\n      });\n\n      console.log(\"Selected Hour \".concat((_this.currentHour + 12) % 24, \":00\"), 'on', _this.toDateString(currentDate));\n    };\n\n    _this.onMouseUp = function (e) {\n      var offset = e.pageX - _this.mouseX;\n      var numUnit = Math.round(offset / _this.rulerUnitLength);\n      _this.currentHour = _this.initialHour - numUnit;\n      var currentDate = new Date(_this.refDate);\n      currentDate.setDate(_this.refDate.getDate() + Math.round(_this.currentHour / 24)); // set the offset position to that corresponding to an hour\n\n      _this.setState({\n        leftOffset: numUnit * _this.rulerUnitLength,\n        date: currentDate,\n        dateStr: currentDate.toLocaleDateString(\"en-US\")\n      });\n\n      _this.mouseX = null;\n    };\n\n    _this.onClick = function (e) {\n      if (_this.moving) {\n        _this.moving = false;\n        return;\n      }\n\n      var offset = e.pageX - 640;\n      var numUnit = -Math.round(offset / _this.rulerUnitLength);\n      _this.currentHour = _this.currentHour - numUnit;\n      var currentDate = new Date(_this.refDate);\n      currentDate.setDate(_this.refDate.getDate() + Math.round(_this.currentHour / 24)); // set the offset position to that corresponding to an hour\n\n      _this.setState({\n        leftOffset: _this.state.leftOffset + numUnit * _this.rulerUnitLength,\n        date: currentDate,\n        dateStr: currentDate.toLocaleDateString(\"en-US\")\n      });\n\n      console.log(\"Selected Hour \".concat((_this.currentHour + 12) % 24, \":00\"), 'on', _this.toDateString(currentDate));\n      _this.mouseX = null;\n    };\n\n    _this.onMouseLeave = function () {\n      _this.mouseX = null;\n    };\n\n    _this.calendar = null; // X position when starting to drag\n\n    _this.mouseX = null;\n    _this.moving = false; // length of an hour in the scale, including border width of each cell\n\n    _this.rulerUnitLength = 44; // total number of hours shown on the scale, corresponding to 90 days\n\n    _this.showHours = 30 * 3 * 24; // total length of the scale, including additional 2px for borders on both ends\n\n    _this.rulerLength = _this.rulerUnitLength * _this.showHours + 2; // the hour value that is pointed initially when selecting a date, that is a middle point of all hours\n\n    _this.initialHour = _this.showHours / 2; // width level of the scaler window, number of hours available on each side\n\n    _this.widthLevel = props.widthLevel || 6;\n\n    if (props.widthLevel < 3) {\n      _this.widthLevel = 3;\n    } // the position offset of the div block of the scale relative to the left border of the yellow scale container, 10px for initial offset caused by border and padding\n\n\n    _this.leftInitial = -_this.rulerUnitLength * (_this.initialHour - _this.widthLevel) - 10; // current hours elapsed relative to the leftmost hour\n\n    _this.currentHour = _this.initialHour;\n    _this.initialDate = props.defaultDate || new Date(); // reference date corresponding to the leftmost hour, used to calculate the current date as we drag along the scale\n\n    _this.refDate = new Date(_this.initialDate);\n\n    _this.refDate.setDate(_this.refDate.getDate() - 45);\n\n    _this.state = {\n      date: _this.initialDate,\n      // current date selected\n      dateStr: _this.initialDate.toLocaleDateString(\"en-US\"),\n      // formatted date string shown in text field\n      showCalendar: false,\n      // whether calendar select is shown\n      leftOffset: 0 // offset of the scale as it is dragged horizontally\n\n    };\n    return _this;\n  }\n\n  _createClass(HourSelector, [{\n    key: \"renderRuler\",\n    value: function renderRuler(date) {\n      var cells = [];\n      var totalHours = this.showHours + 12; // the middle of all hours corresponds to 12\n\n      for (var i = 12; i < totalHours; i++) {\n        cells.push(\"\".concat(String.prototype.padStart.call(i % 24, 2, '0')));\n      }\n\n      return React.createElement(\"table\", {\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, cells.map(function (cell, index) {\n        return React.createElement(\"td\", {\n          key: index,\n          className: \"ruler-cell-up\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, cell);\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, cells.map(function (cell, index) {\n        return React.createElement(\"td\", {\n          key: index,\n          className: \"ruler-cell-down\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        });\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentWidth = \"\".concat((this.widthLevel - 6) * 88 + 550, \"px\");\n      return React.createElement(\"div\", {\n        className: \"hour-selector\",\n        onClick: this.hideCalendar,\n        style: {\n          width: currentWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"date-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"date-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.dateStr,\n        onFocus: this.showCalendar,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"date-picker-svg\",\n        onClick: this.showCalendar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"calendar-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), this.state.showCalendar && React.createElement(ReactCalendar, {\n        ref: function ref(self) {\n          _this2.calendar = self;\n        },\n        date: this.state.date,\n        className: \"my-calendar\",\n        selectCalendar: this.selectCalendar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"hour-container-hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hour-mask\" // onMouseMove={this.onMouseMove} \n        // onMouseDown={this.onMouseDown}\n        // onMouseUp={this.onMouseUp} \n        ,\n        onMouseLeave: this.onMouseLeave,\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"hour-container\",\n        style: {\n          left: \"calc(\".concat(this.leftInitial, \"px + \").concat(this.state.leftOffset, \"px)\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.renderRuler(this.state.date)), React.createElement(\"div\", {\n        className: \"hour-picker\",\n        ref: function ref(self) {\n          _this2.pointer = self;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return HourSelector;\n}(Component);\n\nexport default HourSelector;","map":{"version":3,"sources":["E:\\web\\node\\react_hour_selector\\src\\components\\hour-selector\\hour-selector.js"],"names":["React","Component","ReactDOM","ReactCalendar","FontAwesomeIcon","HourSelector","props","toDateString","date","toLocaleDateString","showCalendar","setState","hideCalendar","e","target","tagName","className","mycalendar","findDOMNode","calendar","contains","selectCalendar","dateStr","leftOffset","currentHour","initialHour","refDate","Date","setDate","getDate","onMouseDown","mouseX","pageX","state","onMouseMove","moving","offset","numUnit","Math","round","rulerUnitLength","currentDate","console","log","onMouseUp","onClick","onMouseLeave","showHours","rulerLength","widthLevel","leftInitial","initialDate","defaultDate","cells","totalHours","i","push","String","prototype","padStart","call","map","cell","index","currentWidth","width","self","left","renderRuler","pointer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactCalendar from '../react-calendar/react-calendar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './hour-selector.css';\n\nclass HourSelector extends Component {\n    constructor(props){\n        // props.widthLevel: Number    // number of hours available in the scaler window on each side of the pointer, 3+\n        // props.defaultDate: Date    // default date selected\n        super(props);\n\n        // calendar dom element to be referenced\n        this.calendar = null;\n\n        // X position when starting to drag\n        this.mouseX = null;\n\n        this.moving = false;\n        \n        // length of an hour in the scale, including border width of each cell\n        this.rulerUnitLength = 44;\n\n        // total number of hours shown on the scale, corresponding to 90 days\n        this.showHours = 30 * 3 * 24;\n        \n        // total length of the scale, including additional 2px for borders on both ends\n        this.rulerLength = this.rulerUnitLength * this.showHours + 2;\n        \n        // the hour value that is pointed initially when selecting a date, that is a middle point of all hours\n        this.initialHour = this.showHours / 2;\n        \n        // width level of the scaler window, number of hours available on each side\n        this.widthLevel = (props.widthLevel) || 6;\n        if (props.widthLevel < 3) {\n            this.widthLevel = 3;\n        }\n\n        // the position offset of the div block of the scale relative to the left border of the yellow scale container, 10px for initial offset caused by border and padding\n        this.leftInitial = -this.rulerUnitLength * (this.initialHour - this.widthLevel) -10;\n        \n        // current hours elapsed relative to the leftmost hour\n        this.currentHour = this.initialHour;\n\n        this.initialDate = props.defaultDate || new Date();\n        \n        // reference date corresponding to the leftmost hour, used to calculate the current date as we drag along the scale\n        this.refDate = new Date(this.initialDate);\n        this.refDate.setDate(this.refDate.getDate() - 45);\n\n        this.state = {\n            date: this.initialDate, // current date selected\n            dateStr: this.initialDate.toLocaleDateString(\"en-US\"), // formatted date string shown in text field\n            showCalendar: false, // whether calendar select is shown\n            leftOffset: 0, // offset of the scale as it is dragged horizontally\n        }\n    }\n\n    toDateString = (date) => {\n        return date.toLocaleDateString(\"en-US\");\n    }\n\n    showCalendar = () => {\n        this.setState({\n            showCalendar: true\n        });\n    }\n\n    hideCalendar = (e) => {\n        // when clicking on the date text field, calendar is not hidden\n        if (e.target.tagName === \"INPUT\" || e.target.className === \"date-text\") {\n            return;\n        }\n        // when clicking on the calendar avatar, calendar is not hidden\n        if (e.target.tagName === 'path' || e.target.tagName === \"svg\" || e.className === \"date-picker-svg\") {\n            return;\n        }\n        // when clicking on any element of a showing calendar, calendar is not hidden\n        const mycalendar = ReactDOM.findDOMNode(this.calendar);\n        if (mycalendar && mycalendar.contains(e.target)) {\n            return;\n        }\n\n        this.setState({\n            showCalendar: false\n        });\n    }\n\n    // when a date is selected from the calendar, calendar is hidden and the position of scale is reset to initial\n    selectCalendar = (date) => {\n        this.setState({\n            date: date,\n            dateStr: date.toLocaleDateString(\"en-US\"),\n            showCalendar: false,\n            leftOffset: 0\n        });\n        this.currentHour = this.initialHour;\n        this.refDate = new Date(date);\n        this.refDate.setDate(date.getDate() - 45);\n    }\n\n    // record the position mouseX when starting dragging\n    onMouseDown = (e) => {\n        this.mouseX = e.pageX - this.state.leftOffset;\n    }\n\n    // calculate in real time the length of distance from mouseX when we dragging\n    // then calculate the current date and position offset of the scale\n    onMouseMove = (e) => {\n        if (!this.mouseX) return;\n        this.moving = true;\n\n        let offset = e.pageX - this.mouseX;\n        let numUnit = Math.round(offset / this.rulerUnitLength);\n        this.currentHour = this.initialHour - numUnit;\n\n        const currentDate = new Date(this.refDate);\n        currentDate.setDate(this.refDate.getDate() + Math.round(this.currentHour / 24));\n        this.setState({\n            leftOffset: offset,\n            date: currentDate,\n            dateStr: currentDate.toLocaleDateString(\"en-US\")\n        });\n\n        console.log(`Selected Hour ${(this.currentHour + 12) % 24}:00`, 'on', this.toDateString(currentDate));\n    }\n\n    onMouseUp = (e) => {\n        const offset = e.pageX - this.mouseX;\n        let numUnit = Math.round(offset / this.rulerUnitLength);\n        this.currentHour = this.initialHour - numUnit;\n\n        const currentDate = new Date(this.refDate);\n        currentDate.setDate(this.refDate.getDate() + Math.round(this.currentHour / 24));\n\n        // set the offset position to that corresponding to an hour\n        this.setState({\n            leftOffset: numUnit * this.rulerUnitLength,\n            date: currentDate,\n            dateStr: currentDate.toLocaleDateString(\"en-US\")\n        });\n\n        this.mouseX = null;\n    }\n\n    onClick = (e) => {\n        if (this.moving) { \n            this.moving = false;\n            return; \n        }\n\n        const offset = e.pageX - 640;\n        let numUnit = -Math.round(offset / this.rulerUnitLength);\n        this.currentHour = this.currentHour - numUnit;\n\n        const currentDate = new Date(this.refDate);\n        currentDate.setDate(this.refDate.getDate() + Math.round(this.currentHour / 24));\n\n        // set the offset position to that corresponding to an hour\n        this.setState({\n            leftOffset: this.state.leftOffset + numUnit * this.rulerUnitLength,\n            date: currentDate,\n            dateStr: currentDate.toLocaleDateString(\"en-US\")\n        });\n\n        console.log(`Selected Hour ${(this.currentHour + 12) % 24}:00`, 'on', this.toDateString(currentDate));\n\n        this.mouseX = null;\n    }\n\n    // when mouse leaving, set mouseX to null to keep the scale static\n    onMouseLeave = () => {\n        this.mouseX = null;\n    }\n\n    renderRuler(date) {\n        const cells = [];\n        const totalHours = this.showHours + 12;\n        \n        // the middle of all hours corresponds to 12\n        for(let i = 12; i < totalHours; i++) {\n            cells.push(`${String.prototype.padStart.call(i % 24, 2, '0')}`);\n        }\n\n        return (\n            <table readOnly>\n                <tbody>\n                    <tr>\n                        {cells.map((cell, index) => {\n                            return (<td key={index} className=\"ruler-cell-up\">{cell}</td>)\n                        })}\n                    </tr>\n                    <tr>\n                        {cells.map((cell, index) => {\n                            return (<td key={index} className=\"ruler-cell-down\"></td>)\n                        })}\n                    </tr>\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        const currentWidth = `${(this.widthLevel - 6) * 88 + 550}px`;\n\n        return (\n            <div className=\"hour-selector\" onClick={this.hideCalendar} style={{width: currentWidth}}>\n                <div className=\"date-picker\">\n                    <div className=\"date-text\"><input type=\"text\" value={this.state.dateStr} onFocus={this.showCalendar} readOnly /></div>\n                    <div className=\"date-picker-svg\" onClick={this.showCalendar}><FontAwesomeIcon icon=\"calendar-alt\" /></div>\n                    {this.state.showCalendar && \n                        <ReactCalendar \n                            ref={(self)=>{\n                                this.calendar = self;\n                            }} \n                            date={this.state.date} \n                            className=\"my-calendar\" \n                            selectCalendar={this.selectCalendar} \n                        />\n                    }\n                </div>\n                <div className=\"hour-container-hidden\">\n                    <div \n                        className=\"hour-mask\"\n                        // onMouseMove={this.onMouseMove} \n                        // onMouseDown={this.onMouseDown}\n                        // onMouseUp={this.onMouseUp} \n                        onMouseLeave={this.onMouseLeave}\n                        onClick={this.onClick}\n                    ></div>\n                    <div \n                        className=\"hour-container\" \n                        style={{left: `calc(${this.leftInitial}px + ${this.state.leftOffset}px)`}} \n                    >\n                        {this.renderRuler(this.state.date)}\n                    </div>\n                    <div \n                        className=\"hour-picker\" \n                        ref={(self)=>{\n                            this.pointer = self;\n                        }} \n                    ></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HourSelector;"]},"metadata":{},"sourceType":"module"}